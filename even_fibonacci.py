#!/usr/bin/env python

# Each new term in the Fibonacci sequence
# is generated by adding the previous two
# terms. By starting with 1 and 2, the
# first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the
# Fibonacci sequence whose values do not
# exceed four million, find the sum of the
# even-valued terms.

def fib(lim):
    prev_term = 1
    term = 2
    sum_of_even = 2
    while term < lim:
        cur_term = term
        term += prev_term
        if term % 2 == 0:
            sum_of_even += term
        prev_term = cur_term
    return (prev_term, sum_of_even)

def fibgen(lim):
    while term < lim:
        term += prev_term
        yield term

while True:
    try:
        l = int(raw_input('Limit: '))
        (n, sum) = fib(l)
        print 'Sum of even: %d' % sum
        print 'Closest fib: %d' % n
    except ValueError:
        print 'Must enter integer'

